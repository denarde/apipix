version: '3.2'
services:
  API-PIX-PG:
    image: postgres:13.2
    container_name: "API-PIX-PG"
    environment:
      - POSTGRES_DB=apipix
      - POSTGRES_USER=apipix
      - TZ=GMT
      - POSTGRES_PASSWORD=apipix1609
    ports:
      - 5432:5432
    networks:
      - apipix-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U apipix" ]
      interval: 10s
      timeout: 5s
      retries: 5
  API-PIX-REST:
    image: denarde/api-pix-rest:1.0.0
    container_name: "API-PIX-REST"
    environment:
      - PG_HOST=API-PIX-PG
      - PG_PORT=5432
      - PG_USER=apipix
      - PG_PASS=apipix1609
      - PG_DATABASE=apipix
    ports:
      - 8085:8085
    depends_on:
      API-PIX-PG:
        condition: service_healthy
    networks:
      - apipix-network
networks:
  apipix-network:
    driver: bridge